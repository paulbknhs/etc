# Copyright 2012 Red Hat, Inc. All Rights Reserved
#
# pmlogrewrite configuration for migrating archives containing proc metrics
# that were captured prior to the proc PMDA split-off from the Linux PMDA.
#
# Basically, the PMID domain changed from 60 (linux) to 3 (proc) but all
# cluster and item numbers remain unchanged.
#
# Note that the CPU indom is not migrated, even though it is
# used for cgroup.groups.cpuacct.[<group>.]usage_percpu and
# cgroup.groups.cpuacct.usage_percpu because these metrics use a
# the dynamic pmns. To migrate archives containing these metrics,
# a script would be needed to generate the pmlogwrite config based
# on the metric names actually present in the source archive.

#
# Migrate instance domains
indom 60.9 { indom -> 3.9 }		# per-process indom
indom 60.20 { indom -> 3.20 }		# cgroup hierarchy indom
indom 60.21 { indom -> 3.21 }		# cgroup mount subsys indom

#
# Migrate the pmid domain for each cluster
metric 60.8.* { pmid -> 3.*.* }		# CLUSTER_PID_STAT
metric 60.9.* { pmid -> 3.*.* }		# CLUSTER_PID_STATM
metric 60.13.* { pmid -> 3.*.* }	# CLUSTER_PROC_RUNQ
metric 60.24.* { pmid -> 3.*.* }	# CLUSTER_PID_STATUS
metric 60.31.* { pmid -> 3.*.* }	# CLUSTER_PID_SCHEDSTAT
metric 60.32.* { pmid -> 3.*.* }	# CLUSTER_PID_IO
metric 60.51.* { pmid -> 3.*.* }	# CLUSTER_PID_FD
metric 60.37.* { pmid -> 3.*.* }	# CLUSTER_CGROUP_SUBSYS
metric 60.38.* { pmid -> 3.*.* }	# CLUSTER_CGROUP_MOUNTS
metric 60.39.* { pmid -> 3.*.* }	# CLUSTER_CPUSET_GROUPS
metric 60.40.* { pmid -> 3.*.* }	# CLUSTER_CPUSET_PROCS
metric 60.41.* { pmid -> 3.*.* }	# CLUSTER_CPUACCT_GROUPS
metric 60.42.* { pmid -> 3.*.* }	# CLUSTER_CPUACCT_PROCS
metric 60.43.* { pmid -> 3.*.* }	# CLUSTER_CPUSCHED_GROUPS
metric 60.44.* { pmid -> 3.*.* }	# CLUSTER_CPUSCHED_PROCS
metric 60.45.* { pmid -> 3.*.* }	# CLUSTER_MEMORY_GROUPS
metric 60.46.* { pmid -> 3.*.* }	# CLUSTER_MEMORY_PROCS
metric 60.47.* { pmid -> 3.*.* }	# CLUSTER_NET_CLS_GROUPS
metric 60.48.* { pmid -> 3.*.* }	# CLUSTER_NET_CLS_PROCS

#
# These two proc.io metrics were incorrectly classified
#
metric proc.io.rchar {
        sem -> counter
        units -> 1,0,0,BYTE,0,0
}

metric proc.io.wchar {
        sem -> counter
        units -> 1,0,0,BYTE,0,0
}
