#
# Copyright 2015 Red Hat.
#
# pmlogrewrite configuration for migrating archives containing old
# cgroup metrics with incorrect units into their correct form.
#

metric cgroup.memory.stat.cache			{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.rss			{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.rss_huge		{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.mapped_file		{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.writeback		{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.swap			{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.pgpgin		{ units -> 0,0,1,0,0,ONE }
metric cgroup.memory.stat.pgpgout		{ units -> 0,0,1,0,0,ONE }
metric cgroup.memory.stat.pgfault		{ units -> 0,0,1,0,0,ONE }
metric cgroup.memory.stat.pgmajfault		{ units -> 0,0,1,0,0,ONE }
metric cgroup.memory.stat.inactive_anon		{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.active_anon		{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.inactive_file		{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.active_file		{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.unevictable		{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.total.cache		{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.total.rss		{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.total.rss_huge	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.total.mapped_file	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.total.writeback	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.total.swap		{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.total.pgpgin		{ units -> 0,0,1,0,0,ONE }
metric cgroup.memory.stat.total.pgpgout		{ units -> 0,0,1,0,0,ONE }
metric cgroup.memory.stat.total.pgfault		{ units -> 0,0,1,0,0,ONE }
metric cgroup.memory.stat.total.pgmajfault	{ units -> 0,0,1,0,0,ONE }
metric cgroup.memory.stat.total.inactive_anon	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.total.active_anon	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.total.inactive_file	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.total.active_file	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.total.unevictable	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.recent.rotated_anon	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.recent.rotated_file	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.recent.scanned_anon	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.memory.stat.recent.scanned_file	{ units -> 1,0,0,BYTE,0,0 }

metric cgroup.blkio.all.io_service_bytes.async	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.all.io_service_bytes.read	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.all.io_service_bytes.sync	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.all.io_service_bytes.total	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.all.io_service_bytes.write	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.all.throttle.io_service_bytes.async	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.all.throttle.io_service_bytes.read	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.all.throttle.io_service_bytes.sync	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.all.throttle.io_service_bytes.total	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.all.throttle.io_service_bytes.write	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.dev.io_service_bytes.async	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.dev.io_service_bytes.read	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.dev.io_service_bytes.sync	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.dev.io_service_bytes.total	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.dev.io_service_bytes.write	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.dev.throttle.io_service_bytes.async	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.dev.throttle.io_service_bytes.read	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.dev.throttle.io_service_bytes.sync	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.dev.throttle.io_service_bytes.total	{ units -> 1,0,0,BYTE,0,0 }
metric cgroup.blkio.dev.throttle.io_service_bytes.write	{ units -> 1,0,0,BYTE,0,0 }
